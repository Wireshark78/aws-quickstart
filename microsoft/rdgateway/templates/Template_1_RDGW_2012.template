{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "(0005) - This template creates a VPC infrastructure for a multi-AZ, multi-tier deployment of an RD Gateway infrstructure. It installs 2 RD Gateways into subnets in seperate AZs inside a public VPC subnet, as well as NAT instances for outbound internet access from private subnets. **WARNING** This template creates Amazon EC2 Windows instance and related resources. You will be billed for the AWS resources used if you create a stack from this template.",
    "Parameters": {
        "KeyPairName": {
            "Description": "Public/private key pairs allow you to securely connect to your instance after it launches",
            "Type": "AWS::EC2::KeyPair::KeyName"
        },
        "NATInstanceType": {
            "Description": "Amazon EC2 instance type for the NAT Instances",
            "Type": "String",
            "Default": "t2.small",
            "AllowedValues": [
                "t2.small",
                "t2.medium"
            ]
        },
        "RDGWInstanceType": {
            "Description": "Amazon EC2 instance type for the Remote Desktop Gatweway Instance",
            "Type": "String",
            "Default": "m4.xlarge",
            "AllowedValues": [
                "m4.large",
                "m4.xlarge",
                "m4.2xlarge",
                "m4.4xlarge"
            ]
        },
        "RDGWNetBIOSName1": {
            "Description": "NetBIOS name of the 1st RD Gateway (upto 15 characters)",
            "Type": "String",
            "Default": "RDGW1",
            "MinLength": "1",
            "MaxLength": "15",
            "AllowedPattern": "[a-zA-Z0-9]+"
        },
        "RDGWNetBIOSName2": {
            "Description": "NetBIOS name of the 2nd RD Gateway (upto 15 characters)",
            "Type": "String",
            "Default": "RDGW2",
            "MinLength": "1",
            "MaxLength": "15",
            "AllowedPattern": "[a-zA-Z0-9]+"
        },
        "AdminUser": {
            "Description": "User name for the new local administrator account",
            "Type": "String",
            "Default": "StackAdmin",
            "MinLength": "5",
            "MaxLength": "25",
            "AllowedPattern": "[a-zA-Z0-9]*"
        },
        "AdminPassword": {
            "Description": "Password for the administrative account. Must be at least 8 characters containing letters, numbers and symbols",
            "Type": "String",
            "MinLength": "8",
            "MaxLength": "32",
            "AllowedPattern": "(?=^.{6,255}$)((?=.*\\d)(?=.*[A-Z])(?=.*[a-z])|(?=.*\\d)(?=.*[^A-Za-z0-9])(?=.*[a-z])|(?=.*[^A-Za-z0-9])(?=.*[A-Z])(?=.*[a-z])|(?=.*\\d)(?=.*[A-Z])(?=.*[^A-Za-z0-9]))^.*",
            "NoEcho": "true"
        },
        "DomainDNSName": {
            "Description": "Fully qualified domain name (FQDN) e.g. example.com",
            "Type": "String",
            "Default": "example.com",
            "MinLength": "3",
            "MaxLength": "25",
            "AllowedPattern": "[a-zA-Z0-9]+\\..+"
        },
        "DMZ1CIDR": {
            "Description": "CIDR Block for the Public DMZ Subnet located in AZ1",
            "Type": "String",
            "Default": "10.0.32.0/20",
            "AllowedPattern": "[a-zA-Z0-9]+\\..+"
        },
        "DMZ2CIDR": {
            "Description": "CIDR Block for the Public DMZ Subnet located in AZ2",
            "Type": "String",
            "Default": "10.0.96.0/20",
            "AllowedPattern": "[a-zA-Z0-9]+\\..+"
        },
        "PrivSub1CIDR": {
            "Description": "CIDR Block for Private Subnet 1 located in AZ1",
            "Type": "String",
            "Default": "10.0.0.0/19",
            "AllowedPattern": "[a-zA-Z0-9]+\\..+"
        },
        "PrivSub2CIDR": {
            "Description": "CIDR Block for Private Subnet 2 located in AZ2",
            "Type": "String",
            "Default": "10.0.64.0/19",
            "AllowedPattern": "[a-zA-Z0-9]+\\..+"
        },
        "VPCCIDR": {
            "Description": "CIDR Block for the VPC",
            "Type": "String",
            "Default": "10.0.0.0/16",
            "AllowedPattern": "[a-zA-Z0-9]+\\..+"
        },
        "RDGW1PrivateIp": {
            "Description": "Fixed private IP for the first RD Gateway located in AZ1",
            "Type": "String",
            "Default": "10.0.32.11"
        },
        "RDGW2PrivateIp": {
            "Description": "Fixed private IP for the second RD Gateway located in AZ2",
            "Type": "String",
            "Default": "10.0.96.11"
        }
    },
    "Mappings": {
        "AWSAMIRegionMap": {
            "AMI": {
                "AWSNAT": "amzn-ami-vpc-nat-hvm-2016.03.1.x86_64-ebs",
                "WS2012R2": "Windows_Server-2012-R2_RTM-English-64Bit-Base-2016.05.11"
            },
            "ap-northeast-1": {
                "AWSNAT": "ami-5d170c33",
                "WS2012R2": "ami-447a9d25"
            },
            "ap-northeast-2": {
                "AWSNAT": "ami-0d32fa63",
                "WS2012R2": "ami-3e75bd50"
            },
            "ap-southeast-1": {
                "AWSNAT": "ami-4ddb0c2e",
                "WS2012R2": "ami-5bf72138"
            },
            "ap-southeast-2": {
                "AWSNAT": "ami-9094b9f3",
                "WS2012R2": "ami-4c6d422f"
            },
            "eu-central-1": {
                "AWSNAT": "ami-b2c321dd",
                "WS2012R2": "ami-827d90ed"
            },
            "eu-west-1": {
                "AWSNAT": "ami-a2971ed1",
                "WS2012R2": "ami-29eb7e5a"
            },
            "sa-east-1": {
                "AWSNAT": "ami-a28d04ce",
                "WS2012R2": "ami-588f0734"
            },
            "us-east-1": {
                "AWSNAT": "ami-bae80fd7",
                "WS2012R2": "ami-e0e00f8d"
            },
            "us-west-1": {
                "AWSNAT": "ami-3885fb58",
                "WS2012R2": "ami-b8c5bcd8"
            },
            "us-west-2": {
                "AWSNAT": "ami-d3f506b3",
                "WS2012R2": "ami-8db945ed"
            }
        }
    },
    "Resources": {
        "VPC": {
            "Type": "AWS::EC2::VPC",
            "Properties": {
                "CidrBlock": {
                    "Ref": "VPCCIDR"
                },
                "Tags": [
                    {
                        "Key": "Application",
                        "Value": {
                            "Ref": "AWS::StackName"
                        }
                    },
                    {
                        "Key": "Network",
                        "Value": "Public"
                    }
                ]
            }
        },
        "DMZSubnet": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "CidrBlock": {
                    "Ref": "DMZ1CIDR"
                },
                "AvailabilityZone": {
                    "Fn::Select": [
                        0,
                        {
                            "Fn::GetAZs": ""
                        }
                    ]
                },
                "Tags": [
                    {
                        "Key": "Application",
                        "Value": {
                            "Ref": "AWS::StackName"
                        }
                    },
                    {
                        "Key": "Network",
                        "Value": "Public"
                    },
                    {
                        "Key": "Role",
                        "Value": "DMZ 1 Subnet"
                    }
                ]
            }
        },
        "DMZ2Subnet": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "CidrBlock": {
                    "Ref": "DMZ2CIDR"
                },
                "AvailabilityZone": {
                    "Fn::Select": [
                        1,
                        {
                            "Fn::GetAZs": ""
                        }
                    ]
                },
                "Tags": [
                    {
                        "Key": "Application",
                        "Value": {
                            "Ref": "AWS::StackName"
                        }
                    },
                    {
                        "Key": "Network",
                        "Value": "Public"
                    },
                    {
                        "Key": "Role",
                        "Value": "DMZ 2 Subnet"
                    }
                ]
            }
        },
        "PrivateSubnet1": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "CidrBlock": {
                    "Ref": "PrivSub1CIDR"
                },
                "AvailabilityZone": {
                    "Fn::Select": [
                        0,
                        {
                            "Fn::GetAZs": ""
                        }
                    ]
                },
                "Tags": [
                    {
                        "Key": "Application",
                        "Value": {
                            "Ref": "AWS::StackName"
                        }
                    },
                    {
                        "Key": "Network",
                        "Value": "Private"
                    },
                    {
                        "Key": "Role",
                        "Value": "AD1 Subnet"
                    }
                ]
            }
        },
        "PrivateSubnet2": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "CidrBlock": {
                    "Ref": "PrivSub2CIDR"
                },
                "AvailabilityZone": {
                    "Fn::Select": [
                        1,
                        {
                            "Fn::GetAZs": ""
                        }
                    ]
                },
                "Tags": [
                    {
                        "Key": "Application",
                        "Value": {
                            "Ref": "AWS::StackName"
                        }
                    },
                    {
                        "Key": "Network",
                        "Value": "Private"
                    },
                    {
                        "Key": "Role",
                        "Value": "AD2 Subnet"
                    }
                ]
            }
        },
        "InternetGateway": {
            "Type": "AWS::EC2::InternetGateway",
            "Properties": {
                "Tags": [
                    {
                        "Key": "Application",
                        "Value": {
                            "Ref": "AWS::StackName"
                        }
                    },
                    {
                        "Key": "Network",
                        "Value": "Public"
                    }
                ]
            }
        },
        "AttachGateway": {
            "Type": "AWS::EC2::VPCGatewayAttachment",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "InternetGatewayId": {
                    "Ref": "InternetGateway"
                }
            }
        },
        "DMZRouteTable": {
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "Tags": [
                    {
                        "Key": "Application",
                        "Value": {
                            "Ref": "AWS::StackName"
                        }
                    },
                    {
                        "Key": "Network",
                        "Value": "DMZ"
                    }
                ]
            }
        },
        "DMZRoute": {
            "Type": "AWS::EC2::Route",
            "Properties": {
                "RouteTableId": {
                    "Ref": "DMZRouteTable"
                },
                "DestinationCidrBlock": "0.0.0.0/0",
                "GatewayId": {
                    "Ref": "InternetGateway"
                }
            }
        },
        "DMZ1SubnetRouteTableAssociation": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "DMZSubnet"
                },
                "RouteTableId": {
                    "Ref": "DMZRouteTable"
                }
            }
        },
        "DMZ2SubnetRouteTableAssociation": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "DMZ2Subnet"
                },
                "RouteTableId": {
                    "Ref": "DMZRouteTable"
                }
            }
        },
        "PrivateRouteTable": {
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "Tags": [
                    {
                        "Key": "Application",
                        "Value": {
                            "Ref": "AWS::StackName"
                        }
                    },
                    {
                        "Key": "Network",
                        "Value": "AZ1 Private"
                    }
                ]
            }
        },
        "PrivateRoute": {
            "Type": "AWS::EC2::Route",
            "Properties": {
                "RouteTableId": {
                    "Ref": "PrivateRouteTable"
                },
                "DestinationCidrBlock": "0.0.0.0/0",
                "InstanceId": {
                    "Ref": "NAT1"
                }
            }
        },
        "PrivateRouteTable2": {
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "Tags": [
                    {
                        "Key": "Application",
                        "Value": {
                            "Ref": "AWS::StackName"
                        }
                    },
                    {
                        "Key": "Network",
                        "Value": "AZ2 Private"
                    }
                ]
            }
        },
        "PrivateRoute2": {
            "Type": "AWS::EC2::Route",
            "Properties": {
                "RouteTableId": {
                    "Ref": "PrivateRouteTable2"
                },
                "DestinationCidrBlock": "0.0.0.0/0",
                "InstanceId": {
                    "Ref": "NAT2"
                }
            }
        },
        "PrivateSubnetRouteTableAssociation1": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "PrivateSubnet1"
                },
                "RouteTableId": {
                    "Ref": "PrivateRouteTable"
                }
            }
        },
        "PrivateSubnetRouteTableAssociation2": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "PrivateSubnet2"
                },
                "RouteTableId": {
                    "Ref": "PrivateRouteTable2"
                }
            }
        },
        "RdgwEIP": {
            "Type": "AWS::EC2::EIP",
            "Properties": {
                "Domain": "vpc",
                "InstanceId": {
                    "Ref": "RDGateway"
                }
            }
        },
        "Rdgw2EIP": {
            "Type": "AWS::EC2::EIP",
            "Properties": {
                "Domain": "vpc",
                "InstanceId": {
                    "Ref": "RDGateway2"
                }
            }
        },
        "NAT1": {
            "Type": "AWS::EC2::Instance",
            "DependsOn": "AttachGateway",
            "Properties": {
                "ImageId": {
                    "Fn::FindInMap": [
                        "AWSAMIRegionMap",
                        {
                            "Ref": "AWS::Region"
                        },
                        "AWSNAT"
                    ]
                },
                "InstanceType": {
                    "Ref": "NATInstanceType"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "NAT1"
                    }
                ],
                "NetworkInterfaces": [
                    {
                        "GroupSet": [
                            {
                                "Ref": "NATSecurityGroup"
                            }
                        ],
                        "AssociatePublicIpAddress": "true",
                        "DeviceIndex": "0",
                        "DeleteOnTermination": "true",
                        "SubnetId": {
                            "Ref": "DMZSubnet"
                        }
                    }
                ],
                "KeyName": {
                    "Ref": "KeyPairName"
                },
                "SourceDestCheck": "false"
            }
        },
        "NAT2": {
            "Type": "AWS::EC2::Instance",
            "DependsOn": "NAT1",
            "Properties": {
                "ImageId": {
                    "Fn::FindInMap": [
                        "AWSAMIRegionMap",
                        {
                            "Ref": "AWS::Region"
                        },
                        "AWSNAT"
                    ]
                },
                "InstanceType": {
                    "Ref": "NATInstanceType"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "NAT2"
                    }
                ],
                "NetworkInterfaces": [
                    {
                        "GroupSet": [
                            {
                                "Ref": "NATSecurityGroup"
                            }
                        ],
                        "AssociatePublicIpAddress": "true",
                        "DeviceIndex": "0",
                        "DeleteOnTermination": "true",
                        "SubnetId": {
                            "Ref": "DMZ2Subnet"
                        }
                    }
                ],
                "KeyName": {
                    "Ref": "KeyPairName"
                },
                "SourceDestCheck": "false"
            }
        },
        "RDGateway": {
            "Type": "AWS::EC2::Instance",
            "DependsOn": "NAT1",
            "Metadata": {
                "AWS::CloudFormation::Init": {
                    "configSets": {
                        "config": [
                            "setup",
                            "rename",
                            "installRDS",
                            "finalize"
                        ]
                    },
                    "setup": {
                        "files": {
                            "c:\\cfn\\cfn-hup.conf": {
                                "content": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "[main]\n",
                                            "stack=",
                                            {
                                                "Ref": "AWS::StackName"
                                            },
                                            "\n",
                                            "region=",
                                            {
                                                "Ref": "AWS::Region"
                                            },
                                            "\n"
                                        ]
                                    ]
                                }
                            },
                            "c:\\cfn\\hooks.d\\cfn-auto-reloader.conf": {
                                "content": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "[cfn-auto-reloader-hook]\n",
                                            "triggers=post.update\n",
                                            "path=Resources.RDGateway.Metadata.AWS::CloudFormation::Init\n",
                                            "action=cfn-init.exe -v -c config -s ",
                                            {
                                                "Ref": "AWS::StackId"
                                            },
                                            " -r RDGateway",
                                            " --region ",
                                            {
                                                "Ref": "AWS::Region"
                                            },
                                            "\n"
                                        ]
                                    ]
                                }
                            },
                            "c:\\cfn\\scripts\\Configure-RDGW.ps1": {
                                "source": "https://s3.amazonaws.com/quickstart-reference/microsoft/activedirectory/latest/scripts/Configure-RDGW.ps1"
                            }
                        },
                        "services": {
                            "windows": {
                                "cfn-hup": {
                                    "enabled": "true",
                                    "ensureRunning": "true",
                                    "files": [
                                        "c:\\cfn\\cfn-hup.conf",
                                        "c:\\cfn\\hooks.d\\cfn-auto-reloader.conf"
                                    ]
                                }
                            }
                        }
                    },
                    "rename": {
                        "commands": {
                            "1-execute-powershell-script-RenameComputer": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe Rename-Computer -NewName ",
                                            {
                                                "Ref": "RDGWNetBIOSName1"
                                            },
                                            " -Restart"
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "forever"
                            }
                        }
                    },
                    "installRDS": {
                        "commands": {
                            "a-install-rds": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe \"Install-WindowsFeature RDS-Gateway,RSAT-RDS-Gateway\""
                                        ]
                                    ]
                                }
                            },
                            "b-create-admin": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "net user /add ",
                                            {
                                                "Ref": "AdminUser"
                                            },
                                            " ",
                                            {
                                                "Ref": "AdminPassword"
                                            }
                                        ]
                                    ]
                                }
                            },
                            "c-set-admin-group": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "net localgroup Administrators ",
                                            {
                                                "Ref": "AdminUser"
                                            },
                                            " /ADD"
                                        ]
                                    ]
                                }
                            },
                            "d-configure-rdgw": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -ExecutionPolicy RemoteSigned",
                                            " C:\\cfn\\scripts\\Configure-RDGW.ps1 -ServerFQDN ",
                                            {
                                                "Ref": "RDGWNetBIOSName1"
                                            },
                                            ".",
                                            {
                                                "Ref": "DomainDNSName"
                                            },
                                            " -DomainNetBiosName BUILTIN -GroupName administrators -UserName ",
                                            {
                                                "Ref": "AdminUser"
                                            }
                                        ]
                                    ]
                                }
                            }
                        }
                    },
                    "finalize": {
                        "commands": {
                            "1-signal-success": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "cfn-signal.exe -e 0 \"",
                                            {
                                                "Ref": "RDGWWaitHandle"
                                            },
                                            "\""
                                        ]
                                    ]
                                }
                            }
                        }
                    }
                }
            },
            "Properties": {
                "ImageId": {
                    "Fn::FindInMap": [
                        "AWSAMIRegionMap",
                        {
                            "Ref": "AWS::Region"
                        },
                        "WS2012R2"
                    ]
                },
                "InstanceType": {
                    "Ref": "RDGWInstanceType"
                },
                "SubnetId": {
                    "Ref": "DMZSubnet"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "RDGW1"
                    }
                ],
                "BlockDeviceMappings": [
                    {
                        "DeviceName": "/dev/sda1",
                        "Ebs": {
                            "VolumeSize": "50",
                            "VolumeType": "gp2"
                        }
                    }
                ],
                "SecurityGroupIds": [
                    {
                        "Ref": "RDGWSecurityGroup"
                    }
                ],
                "PrivateIpAddress": {
                    "Ref": "RDGW1PrivateIp"
                },
                "KeyName": {
                    "Ref": "KeyPairName"
                },
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "",
                            [
                                "<script>\n",
                                "cfn-init.exe -v -c config -s ",
                                {
                                    "Ref": "AWS::StackId"
                                },
                                " -r RDGateway",
                                " --region ",
                                {
                                    "Ref": "AWS::Region"
                                },
                                "\n",
                                "</script>\n"
                            ]
                        ]
                    }
                }
            }
        },
        "RDGateway2": {
            "Type": "AWS::EC2::Instance",
            "DependsOn": "NAT2",
            "Metadata": {
                "AWS::CloudFormation::Init": {
                    "configSets": {
                        "config": [
                            "setup",
                            "rename",
                            "installRDS",
                            "finalize"
                        ]
                    },
                    "setup": {
                        "files": {
                            "c:\\cfn\\cfn-hup.conf": {
                                "content": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "[main]\n",
                                            "stack=",
                                            {
                                                "Ref": "AWS::StackName"
                                            },
                                            "\n",
                                            "region=",
                                            {
                                                "Ref": "AWS::Region"
                                            },
                                            "\n"
                                        ]
                                    ]
                                }
                            },
                            "c:\\cfn\\hooks.d\\cfn-auto-reloader.conf": {
                                "content": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "[cfn-auto-reloader-hook]\n",
                                            "triggers=post.update\n",
                                            "path=Resources.RDGateway2.Metadata.AWS::CloudFormation::Init\n",
                                            "action=cfn-init.exe -v -c config -s ",
                                            {
                                                "Ref": "AWS::StackId"
                                            },
                                            " -r RDGateway2",
                                            " --region ",
                                            {
                                                "Ref": "AWS::Region"
                                            },
                                            "\n"
                                        ]
                                    ]
                                }
                            },
                            "c:\\cfn\\scripts\\Configure-RDGW.ps1": {
                                "source": "https://s3.amazonaws.com/quickstart-reference/microsoft/activedirectory/latest/scripts/Configure-RDGW.ps1"
                            }
                        },
                        "services": {
                            "windows": {
                                "cfn-hup": {
                                    "enabled": "true",
                                    "ensureRunning": "true",
                                    "files": [
                                        "c:\\cfn\\cfn-hup.conf",
                                        "c:\\cfn\\hooks.d\\cfn-auto-reloader.conf"
                                    ]
                                }
                            }
                        }
                    },
                    "rename": {
                        "commands": {
                            "1-execute-powershell-script-RenameComputer": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe Rename-Computer -NewName ",
                                            {
                                                "Ref": "RDGWNetBIOSName2"
                                            },
                                            " -Restart"
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "forever"
                            }
                        }
                    },
                    "installRDS": {
                        "commands": {
                            "a-install-rds": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe \"Install-WindowsFeature RDS-Gateway,RSAT-RDS-Gateway\""
                                        ]
                                    ]
                                }
                            },
                            "b-create-admin": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "net user /add ",
                                            {
                                                "Ref": "AdminUser"
                                            },
                                            " ",
                                            {
                                                "Ref": "AdminPassword"
                                            }
                                        ]
                                    ]
                                }
                            },
                            "c-set-admin-group": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "net localgroup Administrators ",
                                            {
                                                "Ref": "AdminUser"
                                            },
                                            " /ADD"
                                        ]
                                    ]
                                }
                            },
                            "e-configure-rdgw": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -ExecutionPolicy RemoteSigned",
                                            " C:\\cfn\\scripts\\Configure-RDGW.ps1 -ServerFQDN ",
                                            {
                                                "Ref": "RDGWNetBIOSName2"
                                            },
                                            ".",
                                            {
                                                "Ref": "DomainDNSName"
                                            },
                                            " -DomainNetBiosName BUILTIN -GroupName administrators -UserName ",
                                            {
                                                "Ref": "AdminUser"
                                            }
                                        ]
                                    ]
                                }
                            }
                        }
                    },
                    "finalize": {
                        "commands": {
                            "1-signal-success": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "cfn-signal.exe -e 0 \"",
                                            {
                                                "Ref": "RDGW2WaitHandle"
                                            },
                                            "\""
                                        ]
                                    ]
                                }
                            }
                        }
                    }
                }
            },
            "Properties": {
                "ImageId": {
                    "Fn::FindInMap": [
                        "AWSAMIRegionMap",
                        {
                            "Ref": "AWS::Region"
                        },
                        "WS2012R2"
                    ]
                },
                "InstanceType": {
                    "Ref": "RDGWInstanceType"
                },
                "SubnetId": {
                    "Ref": "DMZ2Subnet"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "RDGW2"
                    }
                ],
                "BlockDeviceMappings": [
                    {
                        "DeviceName": "/dev/sda1",
                        "Ebs": {
                            "VolumeSize": "50",
                            "VolumeType": "gp2"
                        }
                    }
                ],
                "SecurityGroupIds": [
                    {
                        "Ref": "RDGWSecurityGroup"
                    }
                ],
                "PrivateIpAddress": {
                    "Ref": "RDGW2PrivateIp"
                },
                "KeyName": {
                    "Ref": "KeyPairName"
                },
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "",
                            [
                                "<script>\n",
                                "cfn-init.exe -v -c config -s ",
                                {
                                    "Ref": "AWS::StackId"
                                },
                                " -r RDGateway2",
                                " --region ",
                                {
                                    "Ref": "AWS::Region"
                                },
                                "\n",
                                "</script>\n"
                            ]
                        ]
                    }
                }
            }
        },
        "RDGWWaitCondition": {
            "Type": "AWS::CloudFormation::WaitCondition",
            "DependsOn": "RDGateway",
            "Properties": {
                "Handle": {
                    "Ref": "RDGWWaitHandle"
                },
                "Timeout": "3000"
            }
        },
        "RDGWWaitHandle": {
            "Type": "AWS::CloudFormation::WaitConditionHandle"
        },
        "RDGW2WaitCondition": {
            "Type": "AWS::CloudFormation::WaitCondition",
            "DependsOn": "RDGateway2",
            "Properties": {
                "Handle": {
                    "Ref": "RDGW2WaitHandle"
                },
                "Timeout": "3000"
            }
        },
        "RDGW2WaitHandle": {
            "Type": "AWS::CloudFormation::WaitConditionHandle"
        },
        "NATSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "Enables SSH access to NAT1 in AZ1 via port 22 and outbound internet access via private subnets",
                "VpcId": {
                    "Ref": "VPC"
                },
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "22",
                        "ToPort": "22",
                        "CidrIp": "0.0.0.0/0"
                    },
                    {
                        "IpProtocol": "icmp",
                        "FromPort": "-1",
                        "ToPort": "-1",
                        "CidrIp": "0.0.0.0/0"
                    },
                    {
                        "IpProtocol": "-1",
                        "FromPort": "1",
                        "ToPort": "65535",
                        "CidrIp": {
                            "Ref": "PrivSub1CIDR"
                        }
                    },
                    {
                        "IpProtocol": "icmp",
                        "FromPort": "-1",
                        "ToPort": "-1",
                        "CidrIp": {
                            "Ref": "PrivSub1CIDR"
                        }
                    },
                    {
                        "IpProtocol": "-1",
                        "FromPort": "1",
                        "ToPort": "65535",
                        "CidrIp": {
                            "Ref": "PrivSub2CIDR"
                        }
                    },
                    {
                        "IpProtocol": "icmp",
                        "FromPort": "-1",
                        "ToPort": "-1",
                        "CidrIp": {
                            "Ref": "PrivSub2CIDR"
                        }
                    }
                ]
            }
        },
        "RDGWSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "Enable RDP access from the Internet",
                "VpcId": {
                    "Ref": "VPC"
                },
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "3389",
                        "ToPort": "3389",
                        "CidrIp": "0.0.0.0/0"
                    },
                    {
                        "IpProtocol": "icmp",
                        "FromPort": "-1",
                        "ToPort": "-1",
                        "CidrIp": "0.0.0.0/0"
                    }
                ]
            }
        }
    },
    "Outputs": {
        "RDGW1ElasticIP": {
            "Value": {
                "Ref": "RdgwEIP"
            },
            "Description": "Elastic IP address of the first Remote Desktop Gateway (RDGW1) in AZ1"
        },
        "RootCert1": {
            "Value": {
                "Fn::Join": [
                    "",
                    [
                        "c:\\",
                        {
                            "Ref": "RDGWNetBIOSName1"
                        },
                        ".cer"
                    ]
                ]
            },
            "Description": "Location of the root SSL certificate on the first Remote Desktop Gateway (RDGW1) in AZ1"
        },
        "RDGW2ElasticIP": {
            "Value": {
                "Ref": "Rdgw2EIP"
            },
            "Description": "Elastic IP address of the second Remote Desktop Gateway (RDGW2) in AZ2"
        },
        "RootCert2": {
            "Value": {
                "Fn::Join": [
                    "",
                    [
                        "c:\\",
                        {
                            "Ref": "RDGWNetBIOSName2"
                        },
                        ".cer"
                    ]
                ]
            },
            "Description": "Location of the root SSL certificate on the second Remote Desktop Gateway (RDGW2) in AZ2"
        }
    }
}
